name: Deploy Branch Environments

on:
  push:
    branches:
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'
    branches-ignore:
      - main
      - master
      - dev

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy Branch
    steps:
      - uses: actions/checkout@v3

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Update Azure CLI to latest version
      - name: Update Azure CLI
        run: |
          az upgrade --yes

      # Generate a safe app name
      - name: Generate App Service name
        run: |
          # Create a safe app name (must be globally unique)
          SAFE_BRANCH=$(echo ${{ env.BRANCH_NAME }} | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g' | sed 's/^-//;s/-$//' | cut -c1-32)
          BRANCH_APP_NAME="patch-$SAFE_BRANCH-app"
          echo "BRANCH_APP_NAME=$BRANCH_APP_NAME" >> $GITHUB_ENV

      # Create App Service for this branch if it doesn't exist
      - name: Create branch App Service if needed
        run: |
          # Check if the app exists
          APP_EXISTS=$(az webapp list --query "[?name=='${{ env.BRANCH_APP_NAME }}']" -o tsv)

          if [ -z "$APP_EXISTS" ]; then
            echo "Creating new App Service ${{ env.BRANCH_APP_NAME }}..."
            az webapp create \
              --name ${{ env.BRANCH_APP_NAME }} \
              --resource-group patch-nextjs-app \
              --plan patch-app-service-plan \
              --runtime "NODE:22-lts"
            
            echo "Branch App Service created."
          else
            echo "Branch App Service already exists."
          fi

          # Configure Node.js version
          az webapp config appsettings set \
            --name ${{ env.BRANCH_APP_NAME }} \
            --resource-group patch-nextjs-app \
            --settings WEBSITE_NODE_DEFAULT_VERSION=~22

      # Deploy to the branch App Service
      - name: Deploy to branch App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.BRANCH_APP_NAME }}
          resource-group-name: 'patch-nextjs-app'
          package: .
          startup-command: 'npm start'

      # Set up custom hostname for the branch app
      - name: Configure custom hostname
        run: |
          HOSTNAME="${{ env.BRANCH_NAME }}.staging.robruizr.dev"

          # Check if hostname binding exists
          BINDING=$(az webapp config hostname list --webapp-name ${{ env.BRANCH_APP_NAME }} --resource-group patch-nextjs-app --query "[?name=='$HOSTNAME'].name" -o tsv)

          if [ -z "$BINDING" ]; then
            # Add hostname binding
            echo "Attempting to add custom domain binding. This may fail if DNS is not configured yet."
            az webapp config hostname add --webapp-name ${{ env.BRANCH_APP_NAME }} --resource-group patch-nextjs-app --hostname $HOSTNAME || echo "Custom domain binding failed. Please configure DNS records first."
          fi
        continue-on-error: true # Allow workflow to continue even if this step fails

      # Output the app URL
      - name: Display deployment URLs
        run: |
          echo "Branch deployed to:"
          echo "  Azure URL: https://${{ env.BRANCH_APP_NAME }}.azurewebsites.net"
          echo "  Custom URL: https://${{ env.BRANCH_NAME }}.staging.robruizr.dev (once DNS is configured)"

      - name: Log out from Azure
        run: az logout
        if: always()
