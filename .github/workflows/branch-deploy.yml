name: Deploy Branch as Separate App

on:
  push:
    branches:
      - dev
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy Branch
    steps:
      - uses: actions/checkout@v3

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Create a new App Service for this branch if it doesn't exist
      - name: Create or Update App Service for branch
        run: |
          # Generate a safe app name (lowercase alphanumeric)
          SAFE_BRANCH=$(echo ${{ env.BRANCH_NAME }} | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g')
          BRANCH_APP_NAME="patch-$SAFE_BRANCH-app"

          # Check if app exists
          APP_EXISTS=$(az webapp list --query "[?name=='$BRANCH_APP_NAME']" -o tsv)

          if [ -z "$APP_EXISTS" ]; then
            echo "Creating new App Service $BRANCH_APP_NAME..."
            
            # Create App Service
            az webapp create \
              --name $BRANCH_APP_NAME \
              --resource-group patch-nextjs-app \
              --plan patch-nextjs-app \
              --runtime "NODE:22-lts"
          else
            echo "App Service $BRANCH_APP_NAME already exists."
          fi

          # Store app name for next steps
          echo "BRANCH_APP_NAME=$BRANCH_APP_NAME" >> $GITHUB_ENV

      # Deploy to the branch-specific App Service
      - name: Deploy to branch App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.BRANCH_APP_NAME }}
          resource-group-name: 'patch-nextjs-app'
          package: .
          startup-command: 'npm start'

      # Set up custom hostname for the branch app service
      - name: Configure custom hostname
        run: |
          HOSTNAME="${{ env.BRANCH_NAME }}.staging.patch.robruizr.dev"

          # Check if hostname binding exists
          BINDING=$(az webapp config hostname list --webapp-name ${{ env.BRANCH_APP_NAME }} --resource-group patch-nextjs-app --query "[?name=='$HOSTNAME'].name" -o tsv)

          if [ -z "$BINDING" ]; then
            # Add hostname binding - NOTE: This requires domain verification in Azure
            az webapp config hostname add --webapp-name ${{ env.BRANCH_APP_NAME }} --resource-group patch-nextjs-app --hostname $HOSTNAME
          fi

      - name: Log out from Azure
        run: az logout
        if: always()
