name: Deploy Dev Environment

on:
  push:
    branches:
      - dev

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy Dev Environment
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Update Azure CLI to latest version
      - name: Update Azure CLI
        run: |
          az upgrade --yes

      # Create or update dev App Service (not a slot)
      - name: Create dev App Service if needed
        run: |
          DEV_APP_NAME="patch-dev-app"

          # Check if the dev app exists
          DEV_APP_EXISTS=$(az webapp list --query "[?name=='$DEV_APP_NAME']" -o tsv)

          if [ -z "$DEV_APP_EXISTS" ]; then
            echo "Creating new dev App Service..."
            az webapp create \
              --name $DEV_APP_NAME \
              --resource-group patch-nextjs-app \
              --plan patch-app-service-plan \
              --runtime "NODE:22-lts"
            
            echo "Dev App Service created."
          else
            echo "Dev App Service already exists."
          fi

          # Configure Node.js version
          az webapp config appsettings set \
            --name $DEV_APP_NAME \
            --resource-group patch-nextjs-app \
            --settings WEBSITE_NODE_DEFAULT_VERSION=~22

      # Deploy to the dev App Service
      - name: Deploy to dev App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'patch-dev-app'
          resource-group-name: 'patch-nextjs-app'
          package: .
          startup-command: 'npm start'

      # Set up custom hostname for the dev app
      - name: Configure custom hostname
        run: |
          HOSTNAME="dev.staging.robruizr.dev"

          # Check if hostname binding exists
          BINDING=$(az webapp config hostname list --webapp-name patch-dev-app --resource-group patch-nextjs-app --query "[?name=='$HOSTNAME'].name" -o tsv)

          if [ -z "$BINDING" ]; then
            # Add hostname binding
            echo "Attempting to add custom domain binding. This may fail if DNS is not configured yet."
            az webapp config hostname add --webapp-name patch-dev-app --resource-group patch-nextjs-app --hostname $HOSTNAME || echo "Custom domain binding failed. Please configure DNS records first."
          fi
        continue-on-error: true # Allow workflow to continue even if this step fails

      - name: Log out from Azure
        run: az logout
        if: always()
